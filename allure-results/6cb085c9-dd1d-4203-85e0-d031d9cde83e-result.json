{"name": "Create file with empty filename", "status": "passed", "steps": [{"name": "Create file", "status": "passed", "steps": [{"name": "Make POST request to '/api/v1/files'", "status": "passed", "attachments": [{"name": "cUrl command", "source": "dfdc08f6-f220-40c9-8e0b-a4a23d6fb036-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "url", "value": "'/api/v1/files'"}, {"name": "json", "value": "None"}, {"name": "data", "value": "{'filename': '', 'directory': 'tests'}"}, {"name": "files", "value": "{'upload_file': <_io.BufferedReader name='./test_data/files/manga.png'>}"}], "start": 1755102545803, "stop": 1755102547879}], "parameters": [{"name": "request", "value": "CreateFileRequestSchema(filename='', directory='tests', upload_file='./test_data/files/manga.png')"}], "start": 1755102545803, "stop": 1755102547879}, {"name": "Check that response status code equals to <HTTPStatus.UNPROCESSABLE_ENTITY: 422>", "status": "passed", "parameters": [{"name": "actual", "value": "422"}, {"name": "expected", "value": "<HTTPStatus.UNPROCESSABLE_ENTITY: 422>"}], "start": 1755102547879, "stop": 1755102547879}, {"name": "Check create file with empty file name response", "status": "passed", "steps": [{"name": "Check validation error response", "status": "passed", "steps": [{"name": "Check that length of details equals to 1", "status": "passed", "start": 1755102547879, "stop": 1755102547879}, {"name": "Check validation error", "status": "passed", "steps": [{"name": "Check that 'type' equals to 'string_too_short'", "status": "passed", "parameters": [{"name": "actual", "value": "'string_too_short'"}, {"name": "expected", "value": "'string_too_short'"}, {"name": "name", "value": "'type'"}], "start": 1755102547894, "stop": 1755102547894}, {"name": "Check that 'input' equals to ''", "status": "passed", "parameters": [{"name": "actual", "value": "''"}, {"name": "expected", "value": "''"}, {"name": "name", "value": "'input'"}], "start": 1755102547894, "stop": 1755102547894}, {"name": "Check that 'context' equals to {'min_length': 1}", "status": "passed", "parameters": [{"name": "actual", "value": "{'min_length': 1}"}, {"name": "expected", "value": "{'min_length': 1}"}, {"name": "name", "value": "'context'"}], "start": 1755102547894, "stop": 1755102547894}, {"name": "Check that 'message' equals to 'String should have at least 1 character'", "status": "passed", "parameters": [{"name": "actual", "value": "'String should have at least 1 character'"}, {"name": "expected", "value": "'String should have at least 1 character'"}, {"name": "name", "value": "'message'"}], "start": 1755102547894, "stop": 1755102547894}, {"name": "Check that 'location' equals to ['body', 'filename']", "status": "passed", "parameters": [{"name": "actual", "value": "['body', 'filename']"}, {"name": "expected", "value": "['body', 'filename']"}, {"name": "name", "value": "'location'"}], "start": 1755102547894, "stop": 1755102547894}], "parameters": [{"name": "actual", "value": "ValidationErrorSchema(type='string_too_short', input='', context={'min_length': 1}, message='String should have at least 1 character', location=['body', 'filename'])"}, {"name": "expected", "value": "ValidationErrorSchema(type='string_too_short', input='', context={'min_length': 1}, message='String should have at least 1 character', location=['body', 'filename'])"}], "start": 1755102547879, "stop": 1755102547894}], "parameters": [{"name": "actual", "value": "ValidationErrorResponseSchema(details=[ValidationErrorSchema(type='string_too_short', input='', context={'min_length': 1}, message='String should have at least 1 character', location=['body', 'filename'])])"}, {"name": "expected", "value": "ValidationErrorResponseSchema(details=[ValidationErrorSchema(type='string_too_short', input='', context={'min_length': 1}, message='String should have at least 1 character', location=['body', 'filename'])])"}], "start": 1755102547879, "stop": 1755102547894}], "parameters": [{"name": "actual", "value": "ValidationErrorResponseSchema(details=[ValidationErrorSchema(type='string_too_short', input='', context={'min_length': 1}, message='String should have at least 1 character', location=['body', 'filename'])])"}], "start": 1755102547879, "stop": 1755102547894}, {"name": "Validate json schema", "status": "passed", "parameters": [{"name": "instance", "value": "{'detail': [{'type': 'string_too_short', 'loc': ['body', 'filename'], 'msg': 'String should have at least 1 character', 'input': '', 'ctx': {'min_length': 1}}]}"}, {"name": "schema", "value": "{'$defs': {'ValidationErrorSchema': {'description': 'Описание структуры ошибки валидации API', 'properties': {'type': {'title': 'Type', 'type': 'string'}, 'input': {'title': 'Input'}, 'ctx': {'additionalProperties': True, 'title': 'Ctx', 'type': 'object'}, 'msg': {'title': 'Msg', 'type': 'string'}, 'loc': {'items': {'type': 'string'}, 'title': 'Loc', 'type': 'array'}}, 'required': ['type', 'input', 'ctx', 'msg', 'loc'], 'title': 'ValidationErrorSchema', 'type': 'object'}}, 'description': 'Модель описывает структуру ответа API с ошибкой валидации', 'properties': {'detail': {'items': {'$ref': '#/$defs/ValidationErrorSchema'}, 'title': 'Detail', 'type': 'array'}}, 'required': ['detail'], 'title': 'ValidationErrorResponseSchema', 'type': 'object'}"}], "start": 1755102547894, "stop": 1755102547894}], "start": 1755102545803, "stop": 1755102547894, "uuid": "cd9df28b-c941-43ee-ab50-1d7c26e71c16", "historyId": "2c315838109449f0321f814a74159269", "testCaseId": "2c315838109449f0321f814a74159269", "fullName": "tests.files.test_files.TestFiles#test_create_file_with_empty_filename", "labels": [{"name": "feature", "value": "Files"}, {"name": "suite", "value": "Files"}, {"name": "tag", "value": "REGRESSION"}, {"name": "tag", "value": "FILES"}, {"name": "epic", "value": "LMS service"}, {"name": "parentSuite", "value": "LMS service"}, {"name": "story", "value": "Validate entity"}, {"name": "severity", "value": "normal"}, {"name": "subSuite", "value": "Validate entity"}, {"name": "tag", "value": "VALIDATE_ENTITY"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "files"}, {"name": "host", "value": "DESKTOP-VTVL8GT"}, {"name": "thread", "value": "9996-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.files.test_files"}]}