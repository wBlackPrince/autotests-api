[32mINFO    [0m HTTP_logger:event_hooks.py:25 Make POST request to http://localhost:8000/api/v1/users
[32mINFO    [0m HTTP_logger:event_hooks.py:34 Got 200 OK from http://localhost:8000/api/v1/users
[32mINFO    [0m HTTP_logger:event_hooks.py:25 Make POST request to http://localhost:8000/api/v1/authentication/login
[32mINFO    [0m HTTP_logger:event_hooks.py:34 Got 200 OK from http://localhost:8000/api/v1/authentication/login
[32mINFO    [0m HTTP_logger:event_hooks.py:25 Make POST request to http://localhost:8000/api/v1/files
[32mINFO    [0m HTTP_logger:event_hooks.py:34 Got 200 OK from http://localhost:8000/api/v1/files
[32mINFO    [0m HTTP_logger:event_hooks.py:25 Make POST request to http://localhost:8000/api/v1/courses
[32mINFO    [0m HTTP_logger:event_hooks.py:34 Got 200 OK from http://localhost:8000/api/v1/courses
[32mINFO    [0m HTTP_logger:event_hooks.py:25 Make POST request to http://localhost:8000/api/v1/exercises
[32mINFO    [0m HTTP_logger:event_hooks.py:34 Got 200 OK from http://localhost:8000/api/v1/exercises
[32mINFO    [0m BASE_ASSERTIONS:base.py:17 Check that response status code equals to 200
[32mINFO    [0m FILES_ASSERTIONS:exercises.py:84 Check create exercise response
[32mINFO    [0m BASE_ASSERTIONS:base.py:35 Check that title equals to Expert few probably.
[32mINFO    [0m BASE_ASSERTIONS:base.py:35 Check that course_id equals to 2ced48c5-812e-4554-9568-8fdd38a9e8a6
[32mINFO    [0m BASE_ASSERTIONS:base.py:35 Check that min_score equals to 2
[32mINFO    [0m BASE_ASSERTIONS:base.py:35 Check that max_score equals to 61
[32mINFO    [0m BASE_ASSERTIONS:base.py:35 Check that order_index equals to 8
[32mINFO    [0m BASE_ASSERTIONS:base.py:35 Check that description equals to Term rise mouth. Difference whom to the require.
[32mINFO    [0m BASE_ASSERTIONS:base.py:35 Check that estimated_time equals to 65 weeks
[32mINFO    [0m SCHEMA_ASSERTIONS:schema.py:20 Validation JSON Schema