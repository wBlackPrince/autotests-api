{"name": "Get file with incorrect file id", "status": "passed", "steps": [{"name": "Get file by 'incorrect-file-id'", "status": "passed", "steps": [{"name": "Make GET request to '/api/v1/files/incorrect-file-id'", "status": "passed", "parameters": [{"name": "url", "value": "'/api/v1/files/incorrect-file-id'"}, {"name": "params", "value": "None"}], "start": 1754733808706, "stop": 1754733808717}], "parameters": [{"name": "file_id", "value": "'incorrect-file-id'"}], "start": 1754733808706, "stop": 1754733808717}, {"name": "Check that response status code equals to <HTTPStatus.UNPROCESSABLE_ENTITY: 422>", "status": "passed", "parameters": [{"name": "actual", "value": "422"}, {"name": "expected", "value": "<HTTPStatus.UNPROCESSABLE_ENTITY: 422>"}], "start": 1754733808717, "stop": 1754733808717}, {"name": "Check get file with incorrect file id response", "status": "passed", "steps": [{"name": "Check validation error response", "status": "passed", "steps": [{"name": "Check that length of details equals to 1", "status": "passed", "start": 1754733808717, "stop": 1754733808717}, {"name": "Check validation error", "status": "passed", "steps": [{"name": "Check that 'type' equals to 'uuid_parsing'", "status": "passed", "parameters": [{"name": "actual", "value": "'uuid_parsing'"}, {"name": "expected", "value": "'uuid_parsing'"}, {"name": "name", "value": "'type'"}], "start": 1754733808717, "stop": 1754733808717}, {"name": "Check that 'input' equals to 'incorrect-file-id'", "status": "passed", "parameters": [{"name": "actual", "value": "'incorrect-file-id'"}, {"name": "expected", "value": "'incorrect-file-id'"}, {"name": "name", "value": "'input'"}], "start": 1754733808717, "stop": 1754733808717}, {"name": "Check that 'context' equals to {'error': 'invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1'}", "status": "passed", "parameters": [{"name": "actual", "value": "{'error': 'invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1'}"}, {"name": "expected", "value": "{'error': 'invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1'}"}, {"name": "name", "value": "'context'"}], "start": 1754733808717, "stop": 1754733808717}, {"name": "Check that 'message' equals to 'Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1'", "status": "passed", "parameters": [{"name": "actual", "value": "'Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1'"}, {"name": "expected", "value": "'Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1'"}, {"name": "name", "value": "'message'"}], "start": 1754733808717, "stop": 1754733808717}, {"name": "Check that 'location' equals to ['path', 'file_id']", "status": "passed", "parameters": [{"name": "actual", "value": "['path', 'file_id']"}, {"name": "expected", "value": "['path', 'file_id']"}, {"name": "name", "value": "'location'"}], "start": 1754733808717, "stop": 1754733808717}], "parameters": [{"name": "actual", "value": "ValidationErrorSchema(type='uuid_parsing', input='incorrect-file-id', context={'error': 'invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1'}, message='Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1', location=['path', 'file_id'])"}, {"name": "expected", "value": "ValidationErrorSchema(type='uuid_parsing', input='incorrect-file-id', context={'error': 'invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1'}, message='Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1', location=['path', 'file_id'])"}], "start": 1754733808717, "stop": 1754733808717}], "parameters": [{"name": "actual", "value": "ValidationErrorResponseSchema(details=[ValidationErrorSchema(type='uuid_parsing', input='incorrect-file-id', context={'error': 'invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1'}, message='Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1', location=['path', 'file_id'])])"}, {"name": "expected", "value": "ValidationErrorResponseSchema(details=[ValidationErrorSchema(type='uuid_parsing', input='incorrect-file-id', context={'error': 'invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1'}, message='Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1', location=['path', 'file_id'])])"}], "start": 1754733808717, "stop": 1754733808717}], "parameters": [{"name": "actual", "value": "ValidationErrorResponseSchema(details=[ValidationErrorSchema(type='uuid_parsing', input='incorrect-file-id', context={'error': 'invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1'}, message='Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1', location=['path', 'file_id'])])"}], "start": 1754733808717, "stop": 1754733808717}, {"name": "Validate json schema", "status": "passed", "parameters": [{"name": "instance", "value": "{'detail': [{'type': 'uuid_parsing', 'loc': ['path', 'file_id'], 'msg': 'Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1', 'input': 'incorrect-file-id', 'ctx': {'error': 'invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `i` at 1'}}]}"}, {"name": "schema", "value": "{'$defs': {'ValidationErrorSchema': {'description': 'Описание структуры ошибки валидации API', 'properties': {'type': {'title': 'Type', 'type': 'string'}, 'input': {'title': 'Input'}, 'ctx': {'additionalProperties': True, 'title': 'Ctx', 'type': 'object'}, 'msg': {'title': 'Msg', 'type': 'string'}, 'loc': {'items': {'type': 'string'}, 'title': 'Loc', 'type': 'array'}}, 'required': ['type', 'input', 'ctx', 'msg', 'loc'], 'title': 'ValidationErrorSchema', 'type': 'object'}}, 'description': 'Модель описывает структуру ответа API с ошибкой валидации', 'properties': {'detail': {'items': {'$ref': '#/$defs/ValidationErrorSchema'}, 'title': 'Detail', 'type': 'array'}}, 'required': ['detail'], 'title': 'ValidationErrorResponseSchema', 'type': 'object'}"}], "start": 1754733808717, "stop": 1754733808722}], "start": 1754733808706, "stop": 1754733808722, "uuid": "6a76d749-b6d8-490b-ad7b-10f2b63a1227", "historyId": "f0e4e32ce5f83acacb9e8ff7318ebd7e", "testCaseId": "f0e4e32ce5f83acacb9e8ff7318ebd7e", "fullName": "tests.files.test_files.TestFiles#test_get_file_with_incorrect_file_id", "labels": [{"name": "suite", "value": "Files"}, {"name": "tag", "value": "VALIDATE_ENTITY"}, {"name": "subSuite", "value": "Validate entity"}, {"name": "epic", "value": "LMS service"}, {"name": "severity", "value": "normal"}, {"name": "tag", "value": "REGRESSION"}, {"name": "tag", "value": "FILES"}, {"name": "feature", "value": "Files"}, {"name": "parentSuite", "value": "LMS service"}, {"name": "story", "value": "Validate entity"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "files"}, {"name": "host", "value": "DESKTOP-VTVL8GT"}, {"name": "thread", "value": "17368-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.files.test_files"}]}